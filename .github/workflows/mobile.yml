name: Build and Release Mobile Apps

on:
  push:
    tags:
      - 'v*'
    paths:
      - 'mobile/**'
      - '.github/workflows/mobile.yml'
  pull_request:
    paths:
      - 'mobile/**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'mobile/package-lock.json'
        
    - name: Install dependencies
      working-directory: mobile
      run: npm ci
      
    - name: Run tests
      working-directory: mobile
      run: npm test
      
    - name: Run linting
      working-directory: mobile
      run: npm run lint
      
  build-android:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'mobile/package-lock.json'
        
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '11'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      
    - name: Install dependencies
      working-directory: mobile
      run: npm ci
      
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Build Android APK
      working-directory: mobile
      run: |
        npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle
        cd android
        ./gradlew assembleRelease
        
    - name: Sign APK
      if: startsWith(github.ref, 'refs/tags/')
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: mobile/android/app/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
        
    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: smartpaste-android
        path: mobile/android/app/build/outputs/apk/release/*.apk
        
  build-ios:
    needs: test
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'mobile/package-lock.json'
        
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
        
    - name: Install CocoaPods
      run: sudo gem install cocoapods
      
    - name: Install dependencies
      working-directory: mobile
      run: npm ci
      
    - name: Install iOS dependencies
      working-directory: mobile/ios
      run: pod install
      
    - name: Build iOS app
      working-directory: mobile
      run: |
        npx react-native bundle --platform ios --dev false --entry-file index.js --bundle-output ios/main.jsbundle
        
    - name: Build IPA
      if: startsWith(github.ref, 'refs/tags/')
      working-directory: mobile/ios
      run: |
        xcodebuild -workspace SmartPaste.xcworkspace \
          -scheme SmartPaste \
          -configuration Release \
          -archivePath SmartPaste.xcarchive \
          archive
          
        xcodebuild -exportArchive \
          -archivePath SmartPaste.xcarchive \
          -exportOptionsPlist exportOptions.plist \
          -exportPath exports
      env:
        CODE_SIGN_IDENTITY: ${{ secrets.IOS_CODE_SIGN_IDENTITY }}
        PROVISIONING_PROFILE: ${{ secrets.IOS_PROVISIONING_PROFILE }}
        
    - name: Upload IPA artifact
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v3
      with:
        name: smartpaste-ios
        path: mobile/ios/exports/*.ipa
        
  release-google-play:
    needs: build-android
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download Android artifacts
      uses: actions/download-artifact@v3
      with:
        name: smartpaste-android
        
    - name: Upload to Google Play
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
        packageName: com.smartpaste.app
        releaseFiles: '*.apk'
        track: production
        status: completed
        
  release-app-store:
    needs: build-ios
    runs-on: macos-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download iOS artifacts
      uses: actions/download-artifact@v3
      with:
        name: smartpaste-ios
        
    - name: Upload to App Store
      run: |
        xcrun altool --upload-app \
          --type ios \
          --file *.ipa \
          --username ${{ secrets.APPLE_ID }} \
          --password ${{ secrets.APPLE_APP_PASSWORD }}
          
  release-github:
    needs: [build-android, build-ios]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create Mobile Release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: false
        name: SmartPaste Mobile ${{ github.ref_name }}
        generate_release_notes: true
        files: |
          smartpaste-android/*.apk
          smartpaste-ios/*.ipa
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}